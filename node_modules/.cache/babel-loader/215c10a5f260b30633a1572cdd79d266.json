{"ast":null,"code":"var _jsxFileName = \"/home/mrinfinity/solidity/project/saeid/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport erc20abi from './abi/ERC20ABI.json';\nimport { ethers } from 'ethers';\nimport react, { useState } from 'react';\nimport './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [Address, setAddress] = useState(null); // Connect MetaMask to Dapp\n\n  const connectWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    signer.getAddress().then(result => {\n      setAddress(result);\n    });\n  }; // Disconnect MetaMask to Dapp\n\n\n  const disconnectWallet = () => {\n    setAddress(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hdmgN0YN5w0ryScbE4eTkviVTKs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mrinfinity/solidity/project/saeid/src/App.js"],"names":["erc20abi","ethers","react","useState","App","Address","setAddress","connectWallet","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","getAddress","then","result","disconnectWallet"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,qBAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,IAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBH,QAAQ,CAAC,IAAD,CAAvC,CADa,CAGb;;AACA,QAAMI,aAAa,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMJ,QAAQ,CAACK,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;AAEA,UAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAT,EAAf;AACAD,IAAAA,MAAM,CAACE,UAAP,GAAoBC,IAApB,CAA0BC,MAAD,IAAU;AAACZ,MAAAA,UAAU,CAACY,MAAD,CAAV;AAAmB,KAAvD;AACD,GAND,CAJa,CAYb;;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC7Bb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAnBQF,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport erc20abi from './abi/ERC20ABI.json';\nimport { ethers } from 'ethers';\nimport react , {useState} from 'react';\nimport './'\n\nfunction App() {\n  const [Address , setAddress] = useState(null)\n\n  // Connect MetaMask to Dapp\n  const connectWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    await provider.send(\"eth_requestAccounts\", []);\n  \n    const signer = provider.getSigner();\n    signer.getAddress().then((result)=>{setAddress(result)});\n  }\n\n  // Disconnect MetaMask to Dapp\n  const disconnectWallet = () => {\n    setAddress(null);\n  }\n  return(\n    <div>hello</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}