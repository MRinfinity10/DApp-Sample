[{"/home/mrinfinity/solidity/project/saeid/src/index.js":"1","/home/mrinfinity/solidity/project/saeid/src/reportWebVitals.js":"2","/home/mrinfinity/solidity/project/saeid/src/App.js":"3","/home/mrinfinity/solidity/project/saeid/src/components/Navbar.js":"4","/home/mrinfinity/solidity/project/saeid/src/components/ReadFrom.js":"5","/home/mrinfinity/solidity/project/saeid/src/components/GetBalance.js":"6","/home/mrinfinity/solidity/project/saeid/src/components/WriteFrom.js":"7","/home/mrinfinity/solidity/project/saeid/src/components/TxList.js":"8"},{"size":500,"mtime":1649778814672,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1649769106243,"results":"11","hashOfConfig":"10"},{"size":4385,"mtime":1649848185685,"results":"12","hashOfConfig":"10"},{"size":2133,"mtime":1649868646355,"results":"13","hashOfConfig":"10"},{"size":3825,"mtime":1649868798066,"results":"14","hashOfConfig":"10"},{"size":2108,"mtime":1649867797574,"results":"15","hashOfConfig":"10"},{"size":1752,"mtime":1649868284393,"results":"16","hashOfConfig":"10"},{"size":2425,"mtime":1649869766385,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"9ij98b",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/home/mrinfinity/solidity/project/saeid/src/index.js",[],[],["44","45"],"/home/mrinfinity/solidity/project/saeid/src/reportWebVitals.js",[],[],"/home/mrinfinity/solidity/project/saeid/src/App.js",["46","47"],[],"import './App.css';\nimport erc20abi from './abi/ERC20ABI.json';\nimport { ethers } from 'ethers';\nimport react , {useState, useEffect} from 'react';\nimport Navbar from './components/Navbar'; \nimport ReadFrom from './components/ReadFrom';\nimport GetBalance from './components/GetBalance';\nimport WriteForm from './components/WriteFrom';\nimport TxList from './components/TxList';\n\nfunction App() {\n  const [txs, setTxs] = useState([]);\n  const [contractListened, setContractListened] = useState();\n  const [Address , setAddress] = useState(null)\n\n  const [contractInfo, setContractInfo] = useState({\n    address: \"-\",\n    tokenName: \"-\",\n    tokenSymbol: \"-\",\n    totalSupply: \"-\"\n  })\n\n  const [balanceInfo, setBalanceInfo] = useState({\n    address: \"-\",\n    balance: \"-\"\n  })\n\n  // Connect MetaMask to Dapp\n  const connectWallet = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    await provider.send(\"eth_requestAccounts\", []);\n  \n    const signer = provider.getSigner();\n    signer.getAddress().then((result)=>{setAddress(result)});\n  }\n\n  // Disconnect MetaMask to Dapp\n  const disconnectWallet = () => {\n    setAddress(null);\n  }\n\n  // Handle submit button for \"read from contract\" section\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n    const erc20 = new ethers.Contract(data.get(\"addr\"), erc20abi, provider);\n\n\n    const tokenName = await erc20.name();\n    console.log(provider.getCode(Address))\n\n    const tokenSymbol = await erc20.symbol();\n    const totalSupply = await erc20.totalSupply();\n      \n\n    setContractInfo({\n      address: data.get(\"addr\"),\n      tokenName,  \n      tokenSymbol,\n      totalSupply\n    });\n\n    console.log(contractInfo);\n  }\n\n   // Getting user ballance\n   const getMyBalance = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, provider);\n    const signer = await provider.getSigner();\n    const signerAddress = await signer.getAddress();\n    const balance = await erc20.balanceOf(signerAddress);\n\n    setBalanceInfo({\n      address: signerAddress,\n      balance: String(balance)\n    });\n  };\n\n  //Handling transfer tokens in dapp (Write)\n  const handleTransfer = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = await provider.getSigner();\n    const erc20 = new ethers.Contract(contractInfo.address, erc20abi, signer);\n    await erc20.transfer(data.get(\"recipient\"), data.get(\"amount\"));\n  }\n\n   //useEffect for listening to events in smart contract and return them in TxList component :0\n   useEffect(() => {\n    if (contractInfo.address !== \"-\") {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const erc20 = new ethers.Contract(\n        contractInfo.address,\n        erc20abi,\n        provider\n      );\n\n      erc20.on(\"Transfer\", (from, to, amount, event) => {\n        console.log({ from, to, amount, event });\n\n        setTxs((currentTxs) => [\n          ...currentTxs,\n          {\n            txHash: event.transactionHash,\n            from,\n            to,\n            amount: String(amount)\n          }\n        ]);\n      });\n      setContractListened(erc20);\n\n\n      return () => {\n        contractListened.removeAllListeners();\n      };\n    }\n  }, [contractInfo.address]);\n    \n  return(\n    <>\n        <Navbar connectWallet= {connectWallet} disconnectWallet={disconnectWallet} Address={Address} setAddress={setAddress}/>\n      \n        <div className=\"grid grid-cols-1 gap-2 md:grid-cols-2 bg-gray-800 pt-4 pb-6\">\n\n          <div className = \"p-6\">\n            <ReadFrom handleSubmit={handleSubmit} contractInfo={contractInfo} setContractInfo={setContractInfo}/>\n            <WriteForm handleTransfer={handleTransfer} />\n            </div>\n          \n          <div>\n            <GetBalance getMyBalance={getMyBalance} balanceInfo={balanceInfo} setBalanceInfo={setBalanceInfo}/>\n            <TxList txs={txs} setTxs={setTxs} />\n          </div>\n        </div>\n    </>\n  );\n}\n\nexport default App;\n","/home/mrinfinity/solidity/project/saeid/src/components/Navbar.js",[],[],"/home/mrinfinity/solidity/project/saeid/src/components/ReadFrom.js",[],[],"/home/mrinfinity/solidity/project/saeid/src/components/GetBalance.js",[],[],"/home/mrinfinity/solidity/project/saeid/src/components/WriteFrom.js",[],[],"/home/mrinfinity/solidity/project/saeid/src/components/TxList.js",["48"],[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":125,"column":6,"nodeType":"59","endLine":125,"endColumn":28,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":23,"column":23,"nodeType":"63","messageId":"64","endLine":23,"endColumn":333,"fix":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contractListened'. Either include it or remove the dependency array.","ArrayExpression",["68"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"69","text":"70"},"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},[1831,1831]," rel=\"noreferrer\"","Update the dependencies array to be: [contractInfo.address, contractListened]",{"range":"73","text":"74"},[3636,3658],"[contractInfo.address, contractListened]"]